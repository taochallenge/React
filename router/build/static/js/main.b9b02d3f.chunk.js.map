{"version":3,"sources":["router/Header.js","router/Home.js","router/router.config.js","router/Doc.js","router/Core.js","router/Guide.js","router/Api.js","router/Hooks.js","router/Tuto.js","router/Blog.js","router/Comm.js","router/Login.js","router/App.js","index.js"],"names":["Header","activeClassName","exact","to","Home","props","style","textAlign","onClick","history","push","routes","path","component","withRouter","className","map","route","i","RouteWithSubRoutes","key","from","pri","localStorage","setItem","replace","location","state","PrivateRoute","Com","rest","render","getItem","pathname","App","ReactDOM","document","getElementById"],"mappings":"uPAkBeA,G,MAdA,WACX,OACI,gCACI,6BACI,kBAAC,IAAD,CAASC,gBAAgB,SAASC,OAAK,EAACC,GAAG,KAA3C,SACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,QAArC,gBACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,SAArC,gBACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,SAArC,gBACA,kBAAC,IAAD,CAASF,gBAAgB,SAASE,GAAG,SAArC,oBCQDC,EAlBF,SAACC,GAEV,OACI,yBAAKC,MAAO,CAACC,UAAU,WACnB,qCACA,uGACA,6BACI,4BAAQC,QACJ,kBAAIH,EAAMI,QAAQC,KAAK,UAD3B,4BAGA,4BAAQF,QACJ,kBAAIH,EAAMI,QAAQC,KAAK,WAD3B,+BCgDDC,G,MAhDA,CACX,CACIC,KAAM,IACNV,OAAO,EACPW,UAAWT,GAEf,CACIQ,KAAM,OACNC,UCuBOC,aAzBH,SAAC,GAAc,IAAbH,EAAY,EAAZA,OACV,OACI,yBAAKI,UAAU,OACX,yBAAKA,UAAU,WACX,kBAAC,IAAD,KACKJ,EAAOK,KAAI,SAACC,EAAMC,GAAP,OACR,kBAACC,EAAD,eAAoBC,IAAKF,GAAOD,QAKxC,kBAAC,IAAD,CAAUI,KAAK,OAAOlB,GAAG,eAE7B,4BACI,4BAAI,kBAAC,IAAD,CAASA,GAAG,aAAZ,6BACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,cAAZ,6BACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,YAAZ,QACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,cAAZ,eDdZmB,KAAK,EACLX,OAAQ,CACJ,CACIC,KAAM,YACNC,UEvBH,WACT,OACI,sCFuBI,CACID,KAAM,aACNC,UG3BF,WACV,OACI,uCH2BI,CACID,KAAM,WACNC,UI/BJ,WACR,OACI,qCJ+BI,CACID,KAAM,aACNC,UKnCF,WACV,OACI,yCLqCJ,CACID,KAAM,QACNC,UMzCK,WACT,OACI,sCNwCAS,KAAK,GAET,CACIV,KAAM,QACNC,UO9CK,WACT,OACI,uCP8CJ,CACID,KAAM,QACNC,UQlDK,WACT,OACI,uCRkDJ,CACID,KAAM,SACNC,UStDM,SAACR,GAKX,OACI,6BACI,4BAAQG,QANF,WACVe,aAAaC,QAAQ,WAAW,OAChCnB,EAAMI,QAAQgB,QAAQpB,EAAMqB,SAASC,SAIjC,qBCEZ,SAASC,EAAT,GAAoD,IAAjBC,EAAgB,EAA3BhB,UAAmBiB,EAAQ,6BAClD,OACC,kBAAC,IAAD,iBACMA,EADN,CAECC,OAAS,gBAAGL,EAAH,EAAGA,SAAH,OACRH,aAAaS,QAAQ,YAClB,kBAACH,EAAQC,GAEV,kBAAC,IAAD,CACC3B,GAAK,CACJ8B,SAAU,SACVN,MAAOD,SASf,SAASP,EAAmBF,GAC3B,OAAGA,EAAMK,IACD,kBAACM,EAAiBX,GAGnB,kBAAC,IAAD,CACIL,KAAMK,EAAML,KACZmB,OAAQ,SAAA1B,GAAK,OACrB,kBAACY,EAAMJ,UAAP,iBACIR,EADJ,CAEAM,OAAQM,EAAMN,aAMlB,IAaeuB,EAbH,WACX,OAAO,kBAAC,IAAD,KACN,kBAAC,EAAD,MACA,kBAAC,IAAD,KAEEvB,EAAOK,KAAI,SAACC,EAAMC,GAAP,OACV,kBAACC,EAAD,eAAoBC,IAAKF,GAAOD,UCnCrCkB,IAASJ,OACP,kBAAC,EAAD,MACAK,SAASC,eAAe,W","file":"static/js/main.b9b02d3f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <NavLink activeClassName='active' exact to='/'>React</NavLink>\r\n                <NavLink activeClassName='active' to='/doc'>文档</NavLink>\r\n                <NavLink activeClassName='active' to='/tuto'>教程</NavLink>\r\n                <NavLink activeClassName='active' to='/blog'>博客</NavLink>\r\n                <NavLink activeClassName='active' to='/comm'>社区</NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Home = (props) => {\r\n    // console.log(props);\r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            <h2>React</h2>\r\n            <p>用于构建用户界面的 JavaScript 库</p>\r\n            <div>\r\n                <button onClick={\r\n                    ()=>props.history.push('/doc')\r\n                }>快速开始</button>\r\n                <button onClick={\r\n                    ()=>props.history.push('/tuto')\r\n                }>入门教程</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","//路由配置的文件\r\nimport Home from './Home';\r\nimport Doc from './Doc';\r\nimport Tuto from './Tuto';\r\nimport Blog from './Blog';\r\nimport Comm from './Comm';\r\nimport Login from './Login';\r\nimport Core from './Core';\r\nimport Guide from './Guide';\r\nimport Api from './Api';\r\nimport Hooks from './Hooks'\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/doc',\r\n        component: Doc,\r\n        pri: true,\r\n        routes: [\r\n            {\r\n                path: '/doc/core',\r\n                component: Core,\r\n            },\r\n            {\r\n                path: '/doc/guide',\r\n                component: Guide,\r\n            },\r\n            {\r\n                path: '/doc/api',\r\n                component: Api,\r\n            },\r\n            {\r\n                path: '/doc/hooks',\r\n                component: Hooks,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path: '/tuto',\r\n        component: Tuto,\r\n        pri: true\r\n    },\r\n    {\r\n        path: '/blog',\r\n        component: Blog\r\n    },\r\n    {\r\n        path: '/comm',\r\n        component: Comm\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login\r\n    }\r\n]\r\n\r\nexport default routes;","import React,{useEffect} from 'react'\r\nimport {NavLink, Route, Redirect,\r\n    useHistory,\r\n    useLocation,\r\n    useParams,\r\n    useRouteMatch,\r\n    withRouter,\r\n    Switch,\r\n    Router\r\n} from 'react-router-dom'\r\nimport { RouteWithSubRoutes } from './App';\r\nimport './doc.css'\r\n// const DocContent = (props)=>{\r\n\r\n//     return <h1>\r\n//         {props.match.params.type}\r\n//     </h1>\r\n// }\r\nconst Doc = ({routes}) => {    \r\n    return (\r\n        <div className='doc'>\r\n            <div className=\"content\">\r\n                <Switch>\r\n                    {routes.map((route,i)=>(\r\n                        <RouteWithSubRoutes key={i} {...route}/>\r\n                    ))}\r\n                </Switch>\r\n\r\n                {/* <Route path='/doc/:type' component={DocContent}/> */}\r\n                <Redirect from='/doc' to='/doc/core'/>\r\n            </div>\r\n            <ol>\r\n                <li><NavLink to='/doc/core'>核心概念</NavLink></li>\r\n                <li><NavLink to='/doc/guide'>高级指引</NavLink></li>\r\n                <li><NavLink to='/doc/api'>API</NavLink></li>\r\n                <li><NavLink to='/doc/hooks'>Hooks</NavLink></li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default withRouter( Doc );","import React from 'react'\r\n\r\nconst Core = () => {\r\n    return (\r\n        <h1>core</h1>\r\n    )\r\n}\r\n\r\nexport default Core\r\n","import React from 'react'\r\n\r\nconst Guide = () => {\r\n    return (\r\n        <h1>guide</h1>\r\n    )\r\n}\r\n\r\nexport default Guide\r\n","import React from 'react'\r\n\r\nconst Api = () => {\r\n    return (\r\n        <h1>api</h1>\r\n    )\r\n}\r\n\r\nexport default Api\r\n","import React from 'react'\r\n\r\nconst Hooks = () => {\r\n    return (\r\n        <h1>hooks</h1>\r\n    )\r\n}\r\n\r\nexport default Hooks\r\n","import React from 'react'\r\n\r\nconst Tuto = () => {\r\n    return (\r\n        <div>\r\n            Tuto\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tuto\r\n","import React from 'react'\r\n\r\nconst Blog = () => {\r\n    return (\r\n        <div>\r\n            Blog\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\r\n\r\nconst Comm = () => {\r\n    return (\r\n        <div>\r\n            Comm\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comm\r\n","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n    const login = ()=>{\r\n        localStorage.setItem('userinfo','tom')\r\n        props.history.replace(props.location.state)\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={login}>登录</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Redirect, Route, NavLink, Switch } from 'react-router-dom'\r\nimport Header from './Header';\r\nimport routes from './router.config';\r\n// 路由基本配置\r\n// 路由传参(以及获取参数-props)\r\n// 动态路由(/:page)\r\n// js跳转\r\n// 权限路由\r\n// npm i antd-mobile --registry https://\r\n\r\nfunction PrivateRoute({ component: Com, ...rest }) {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{ ...rest }\r\n\t\t\trender={ ({ location }) =>\r\n\t\t\t\tlocalStorage.getItem('userinfo')\r\n\t\t\t\t\t? <Com {...rest}/>\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\t\tto={ {\r\n\t\t\t\t\t\t\t\tpathname: \"/login\",\r\n\t\t\t\t\t\t\t\tstate: location\r\n\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction RouteWithSubRoutes(route){\r\n\tif(route.pri){\r\n\t\treturn <PrivateRoute {...route}/>\r\n\t}\r\n\treturn (\r\n        <Route\r\n            path={route.path}\r\n            render={props => (\r\n\t\t\t\t<route.component\r\n\t\t\t\t{...props} \r\n\t\t\t\troutes={route.routes} />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nconst App = () => {\r\n\treturn <Router>\r\n\t\t<Header />\r\n\t\t<Switch>\r\n\t\t\t{\r\n\t\t\t\troutes.map((route,i)=>(\r\n\t\t\t\t\t<RouteWithSubRoutes key={i} {...route}/>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</Switch>\r\n\t</Router>\r\n}\r\n\r\nexport default App;\r\nexport {RouteWithSubRoutes}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Context from './pages/context';\n// import Control from './components/Control'\nimport App from './router/App';\n// import 'antd-mobile/dist/antd-mobile.css';\n// import Demo01 from './pages/Demo01';\n// import Hoc,{Detail} from './pages/Hoc';\n// import Hook from './pages/Hook';\n// import TodoList from './pages/TodoList';\n// import {Home} from './pages/Home';//命名导出的\n// import Home from './pages/Home';//默认导出的\n// import $ from 'jquery';\n\n// console.log($)\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n// ReactDOM.render(\n//   <TodoList/>,\n//   document.getElementById('root')\n// )\n\n\n// ReactDOM.render(\n//     <div>\n//       {/* <Context.Provider value='123'><Hook/></Context.Provider> */}\n//       {/* <Hoc/>\n//       <Detail name='Tom'/> */}\n//       <Control/>\n//       {/* <Home/> */}\n//     </div>,\n//     document.getElementById('root')\n//   );\n\n\n\n// let ele = React.createElement(\n//   'h1',\n//   {id:'title'},\n//   React.createElement('div',{},'hello'),\n//   'react'\n// )\n\n//函数组件\n//UI(展示)组件，木偶组件\n// function App(props){\n//   const {title,id} = props;\n//   return <div>\n//     <h1>智能组件</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n\n// //智能组件\n// class Demo extends React.Component{\n//   constructor(){\n//     super();\n//     this.state = {\n//       name: new Date().toLocaleDateString()\n//     }\n//     setInterval(()=>{\n//       this.setState({name:new Date().toLocaleDateString()})\n//     },1000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='app'/>\n//     </div>\n//   }\n// }\n\n// let ele = <h1 id='title' className='tit'>\n//   <div>当前时间</div>\n//   {new Date().toLocaleDateString()}\n// </h1>;\n\n// ReactDOM.render(\n//   <Demo title='123' id='asd'/>,\n//   document.getElementById('root')\n// );\n\n\n\n// 将jsx对象渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     // 解构\n//     const { type,props } = eleObj;\n//     // 创建第一层节点\n//     let ele = document.createElement(type);\n//     // 遍历属性对象，将属性添加到第一层节点对象上\n//     for (const prop in props) {\n//       if(prop == 'children'){\n//         // 将第一层节点对象的子元素添加进去\n//         if(typeof props.children == 'string'){\n//           const txtNode = document.createTextNode(props.children);\n//           ele.appendChild(txtNode);\n//           break;\n//         }\n//         props.children.forEach( child => {\n//           if(typeof child == 'string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//             ReactDOM.render(child,ele);\n//           }\n//         })\n//       }else{\n//         ele[prop] = props[prop];\n//       }\n//     }\n\n//     // 将第一层DOM节点添加到container中\n//     container.appendChild(ele);\n//   }\n// }\n\n\n\n\n  // 1、原生JS，DOM操作（jQ）\n  // 2、React：开发效率高、性能高\n  // 3、环境搭建、创建一个项目、运行\n  // 4、JSX语法"],"sourceRoot":""}